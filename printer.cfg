# This file contains common pin mappings for the BigTreeTech SKR PRO.
# To use this config, the firmware should be compiled for the
# STM32F407 with a "32KiB bootloader".

# The "make flash" command does not work on the SKR PRO. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR PRO
# with that SD card.

# See docs/Config_Reference.md for a description of parameters.

#Includes
[include mainsail.cfg]
[include toolhead_btt_ebbcan_G0B1_v1.2.cfg]
[include stealthburner_leds.cfg]
[include config_backup.cfg]
[include sensorless-homing.cfg]
[include macros.cfg]
[include klicky-probe.cfg]

## Client variable macro for your printer.cfg

#[gcode_macro _CLIENT_VARIABLE]
#variable_use_custom_pos   : False ; use custom park coordinates for x,y [True/False]
#variable_custom_park_x    : 0.0   ; custom x position; value must be within your defined min and max of X
#variable_custom_park_y    : 0.0   ; custom y position; value must be within your defined min and max of Y
#variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
#variable_retract          : 1.0   ; the value to retract while PAUSE
#variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
#variable_speed_retract    : 35.0  ; retract speed in mm/s
#variable_unretract        : 1.0   ; the value to unretract while RESUME
#variable_speed_unretract  : 35.0  ; unretract speed in mm/s
#variable_speed_hop        : 15.0  ; z move speed in mm/s
#variable_speed_move       : 100.0 ; move speed in mm/s
#variable_park_at_cancel   : False ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
#variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
#variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
#variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
#variable_runout_sensor    : ""    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
## !!! Custom macros, please use with care and review the section of the corresponding macro.
## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
## Only  single line commands are supported, please create a macro if you need more than one command.
#variable_user_pause_macro : ""    ; Everything inside the "" will be executed after the klipper base pause (PAUSE_BASE) function
#variable_user_resume_macro: ""    ; Everything inside the "" will be executed before the klipper base resume (RESUME_BASE) function
#variable_user_cancel_macro: ""    ; Everything inside the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function

[force_move]
enable_force_move: False
#   Set to true to enable FORCE_MOVE and SET_KINEMATIC_POSITION
#   extended G-Code commands. The default is false.

[printer]
kinematics: corexz
max_velocity: 300
max_accel: 3000
max_z_velocity: 50
max_z_accel: 30
square_corner_velocity: 5.0

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[stepper_x]
endstop_pin: tmc2130_stepper_x:virtual_endstop
step_pin: PE9
dir_pin: PF1
enable_pin: !PF2
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 40
#endstop_pin: PB10
position_min: -15
position_endstop: -15
position_max: 300
homing_speed: 20
homing_retract_dist: 0

[stepper_y]
endstop_pin: tmc2130_stepper_y:virtual_endstop
step_pin: PE11
dir_pin: PE8
enable_pin: !PD7
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 40
#endstop_pin: PE12
position_min: -105
position_endstop: -105
position_max: 300
homing_speed: 15
homing_retract_dist: 0

[stepper_z]
step_pin: PE13
dir_pin: PC2
enable_pin: !PC0
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 40
endstop_pin: PG8
position_endstop: 0.5
position_max: 200
homing_speed: 10

#[extruder]
#step_pin: PE14
#dir_pin: PA0
#enable_pin: !PC3
#microsteps: 16
#rotation_distance: 33.500
#nozzle_diameter: 0.400
#filament_diameter: 1.750
#heater_pin: PB1 # Heat0
#sensor_pin:  PF4 # T1 Header
#sensor_type: EPCOS 100K B57560G104F
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
#min_temp: 0
#max_temp: 250

#[extruder1]
#step_pin: PD15
#dir_pin: PE7
#enable_pin: !PA3
#heater_pin: PD14 # Heat1
#sensor_pin: PF5 # T2
#...

#[extruder2]
#step_pin: PD13
#dir_pin: PG9
#enable_pin: !PF0
#heater_pin: PB0 # Heat2
#sensor_pin: PF6 # T3
#...

[heater_bed]
heater_pin: PD12
sensor_pin: PF3 # T0
sensor_type: ATC Semitec 104GT-2
control: pid
pid_Kp: 49.288
pid_Ki: 1.235 
pid_Kd: 491.650
min_temp: 0
max_temp: 130


[fan]
pin: PC8

[heater_fan fan1]
pin: PE5

#[heater_fan fan2]
#pin: PE6

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_290026000147313337303439-if00


[probe]
pin: ^can0:LIMIT_1
x_offset: -29.8
y_offset: -13.5
z_offset: 2.202
speed: 5
samples: 3
sample_retract_dist: 2
lift_speed: 5.0
samples_result: median
samples_tolerance: 0.02
samples_tolerance_retries: 5

########################################
# TMC2130 configuration
########################################

[tmc2130 stepper_x]
cs_pin: PA15
spi_bus: spi3a
diag1_pin: ^!PB10 # Pin connected to TMC DIAG1 pin (or use diag0_pin / DIAG0 pin)
run_current: 0.800  # 1.5A * .707 * .85
interpolate: False
#hold_current: 0.5
#stealthchop_threshold: 999999
driver_SGT: 6  # -64 is most sensitive value, 63 is least sensitive

[tmc2130 stepper_y]
cs_pin: PB8
spi_bus: spi3a
diag1_pin: ^!PE12 # Pin connected to TMC DIAG1 pin (or use diag0_pin / DIAG0 pin)
run_current: 0.800 # 2.0 A * .707 * .85 // before 0.800
interpolate: False
#hold_current: 0.5
#stealthchop_threshold: 999999
driver_SGT: 3  # -64 is most sensitive value, 63 is least sensitive

[tmc2130 stepper_z]
cs_pin: PB9
spi_bus: spi3a
#diag1_pin: PG8
run_current: 0.800  # 1.5A * .707 * .85
interpolate: False
#hold_current: 0.5
#stealthchop_threshold: 999999

#[tmc2130 extruder]
#cs_pin: PB3
#spi_bus: spi3a
##diag1_pin: PE15
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2130 extruder1]
#cs_pin: PG15
#spi_bus: spi3a
##diag1_pin: PE10
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2130 extruder2]
#cs_pin: PG12
#spi_bus: spi3a
##diag1_pin: PG5
#run_current: 0.800
#stealthchop_threshold: 999999

########################################
# Klicky servo pins
########################################

[servo klicky_servo]
#check were your servo is wired
pin: PA1
maximum_servo_angle: 180
minimum_pulse_width: 0.00025
maximum_pulse_width: 0.0024

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PG4, EXP1_3=PD11, EXP1_5=PG2, EXP1_7=PG6, EXP1_9=<GND>,
    EXP1_2=PA8, EXP1_4=PD10, EXP1_6=PG3, EXP1_8=PG7, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PB14, EXP2_3=PG10, EXP2_5=PF11, EXP2_7=PF12,  EXP2_9=<GND>,
    EXP2_2=PB13, EXP2_4=PB12, EXP2_6=PB15, EXP2_8=<RST>, EXP2_10=PF13
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "spi2"

# See the sample-lcd.cfg file for definitions of common LCD displays.

########################################
# MACROS
########################################

